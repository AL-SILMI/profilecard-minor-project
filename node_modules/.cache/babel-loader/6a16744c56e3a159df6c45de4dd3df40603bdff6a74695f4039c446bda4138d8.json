{"ast":null,"code":"var _jsxFileName = \"D:\\\\INTERNSHIP\\\\minor projec\\\\profile-cards-app\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Box, Heading, SimpleGrid, Container } from '@chakra-ui/react';\nimport ProfileCard from './components/ProfileCard/ProfileCard';\nimport ProfileCardSkeleton from './components/ProfileCard/ProfileCardSkeleton'; // Import skeleton\nimport styled from '@emotion/styled';\n// Mock user data (in a real app, this would come from an API)\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst users = [{\n  name: 'Alice Johnson',\n  role: 'Frontend Developer',\n  image: 'https://i.pravatar.cc/150?img=1',\n  description: 'Passionate about creating beautiful and user-friendly web interfaces with React.'\n}, {\n  name: 'Bob Williams',\n  role: 'Backend Developer',\n  image: 'https://i.pravatar.cc/150?img=3',\n  description: 'Expert in Node.js, databases, and building robust APIs that power our applications.'\n}, {\n  name: 'Charlie Brown',\n  role: 'UI/UX Designer',\n  image: 'https://i.pravatar.cc/150?img=5',\n  description: 'Focuses on user experience and visual design. Turns complex problems into elegant solutions.'\n}];\n// This creates a new component that has all of Chakra's Heading features\n// plus our own custom styles from Emotion.\nconst AnimatedHeading = styled(Heading)`\n  background: linear-gradient(-45deg, #007bff, #28a745, #dc3545);\n  background-size: 300% 300%;\n  -webkit-background-clip: text;\n  -webkit-text-fill-color: transparent;\n  animation: gradient 10s ease infinite;\n\n  @keyframes gradient {\n    0% { background-position: 0% 50%; }\n    50% { background-position: 100% 50%; }\n    100% { background-position: 0% 50%; }\n  }\n`;\nfunction App() {\n  _s();\n  const [isLoading, setIsLoading] = useState(true);\n\n  // Simulate loading data\n  useEffect(() => {\n    // This timeout simulates a network request\n    const timer = setTimeout(() => {\n      setIsLoading(false);\n    }, 2500); // Load for 2.5 seconds\n\n    // Cleanup function to clear the timer\n    return () => clearTimeout(timer);\n  }, []); // The empty array means this effect runs only once\n\n  return /*#__PURE__*/_jsxDEV(Box, {\n    bg: \"gray.50\",\n    minH: \"100vh\",\n    py: 10,\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      maxW: \"container.lg\",\n      children: [/*#__PURE__*/_jsxDEV(Heading, {\n        as: \"h1\",\n        textAlign: \"center\",\n        mb: 10,\n        children: \"Meet Our Team \\u2728\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(SimpleGrid, {\n        columns: {\n          base: 1,\n          md: 2,\n          lg: 3\n        },\n        spacing: 8,\n        children: isLoading ?\n        // If loading, show 3 skeleton cards\n        Array.from({\n          length: 3\n        }).map((_, index) => /*#__PURE__*/_jsxDEV(ProfileCardSkeleton, {}, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 17\n        }, this)) :\n        // Otherwise, show the actual user cards\n        users.map((user, index) => /*#__PURE__*/_jsxDEV(ProfileCard, {\n          ...user\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 42\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"Yt82d/dvZsn5nYh5sqDQjv+rJ38=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Box","Heading","SimpleGrid","Container","ProfileCard","ProfileCardSkeleton","styled","jsxDEV","_jsxDEV","users","name","role","image","description","AnimatedHeading","App","_s","isLoading","setIsLoading","timer","setTimeout","clearTimeout","bg","minH","py","children","maxW","as","textAlign","mb","fileName","_jsxFileName","lineNumber","columnNumber","columns","base","md","lg","spacing","Array","from","length","map","_","index","user","_c","$RefreshReg$"],"sources":["D:/INTERNSHIP/minor projec/profile-cards-app/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Box, Heading, SimpleGrid, Container } from '@chakra-ui/react';\nimport ProfileCard from './components/ProfileCard/ProfileCard';\nimport ProfileCardSkeleton from './components/ProfileCard/ProfileCardSkeleton'; // Import skeleton\nimport styled from '@emotion/styled';\n// Mock user data (in a real app, this would come from an API)\nconst users = [\n  {\n    name: 'Alice Johnson',\n    role: 'Frontend Developer',\n    image: 'https://i.pravatar.cc/150?img=1',\n    description: 'Passionate about creating beautiful and user-friendly web interfaces with React.',\n  },\n  {\n    name: 'Bob Williams',\n    role: 'Backend Developer',\n    image: 'https://i.pravatar.cc/150?img=3',\n    description: 'Expert in Node.js, databases, and building robust APIs that power our applications.',\n  },\n  {\n    name: 'Charlie Brown',\n    role: 'UI/UX Designer',\n    image: 'https://i.pravatar.cc/150?img=5',\n    description: 'Focuses on user experience and visual design. Turns complex problems into elegant solutions.',\n  },\n];\n// This creates a new component that has all of Chakra's Heading features\n// plus our own custom styles from Emotion.\nconst AnimatedHeading = styled(Heading)`\n  background: linear-gradient(-45deg, #007bff, #28a745, #dc3545);\n  background-size: 300% 300%;\n  -webkit-background-clip: text;\n  -webkit-text-fill-color: transparent;\n  animation: gradient 10s ease infinite;\n\n  @keyframes gradient {\n    0% { background-position: 0% 50%; }\n    50% { background-position: 100% 50%; }\n    100% { background-position: 0% 50%; }\n  }\n`;\n\nfunction App() {\n  const [isLoading, setIsLoading] = useState(true);\n\n  // Simulate loading data\n  useEffect(() => {\n    // This timeout simulates a network request\n    const timer = setTimeout(() => {\n      setIsLoading(false);\n    }, 2500); // Load for 2.5 seconds\n\n    // Cleanup function to clear the timer\n    return () => clearTimeout(timer);\n  }, []); // The empty array means this effect runs only once\n\n  return (\n    <Box bg=\"gray.50\" minH=\"100vh\" py={10}>\n      <Container maxW=\"container.lg\">\n        <Heading as=\"h1\" textAlign=\"center\" mb={10}>\n          Meet Our Team âœ¨\n        </Heading>\n        {/* 'SimpleGrid' creates a responsive grid layout */}\n        <SimpleGrid columns={{ base: 1, md: 2, lg: 3 }} spacing={8}>\n          {isLoading\n            ? // If loading, show 3 skeleton cards\n              Array.from({ length: 3 }).map((_, index) => (\n                <ProfileCardSkeleton key={index} />\n              ))\n            : // Otherwise, show the actual user cards\n              users.map((user, index) => <ProfileCard key={index} {...user} />)}\n        </SimpleGrid>\n      </Container>\n    </Box>\n  );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}